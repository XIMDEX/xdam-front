// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const confmap = require('./TestConfig.js')

describe('search and filters', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Create Activity 1', async function() {
    // Test name: Create Activity 1
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | waitForElementPresent | css=.teal > .ui:nth-child(1) | 30000
    await driver.wait(until.elementLocated(By.css(".teal > .ui:nth-child(1)")), 30000)
    // 15 | assertText | css=.teal > .ui:nth-child(1) | New activity
    assert(await driver.findElement(By.css(".teal > .ui:nth-child(1)")).getText() == "New activity")
    // 16 | click | css=.teal > .ui:nth-child(1) | 
    await driver.findElement(By.css(".teal > .ui:nth-child(1)")).click()
    // 17 | click | css=.ui > label | 
    await driver.findElement(By.css(".ui > label")).click()
    // 18 | type | id=root_description_name | test 1
    await driver.findElement(By.xpath("//label[contains(.,\'name *\')]/following-sibling::input")).sendKeys("test 1")
    // 19 | type | id=root_description_external_url | www.test1.com
    await driver.findElement(By.xpath("//label[contains(.,\'external_url\')]/following-sibling::input")).sendKeys("www.test1.com")
    // 20 | type | id=root_description_description | test description
    await driver.findElement(By.xpath("//label[contains(.,\'description\')]/following-sibling::textarea")).sendKeys("test description")
    // 21 | click | css=.grouped:nth-child(6) .plus | 
    await driver.findElement(By.css(".grouped:nth-child(6) .plus")).click()
    // 22 | type | id=root_description_tags_0 | test 1
    await driver.findElement(By.id("root_description_tags_0")).sendKeys("test 1")
    // 23 | click | css=.grouped:nth-child(7) .plus | 
    await driver.findElement(By.css(".grouped:nth-child(7) .plus")).click()
    // 24 | type | id=root_description_categories_0 | test 1
    await driver.findElement(By.id("root_description_categories_0")).sendKeys("test 1")
    //subida de archivos
    //carga imagen previa
    await driver.findElement(By.xpath("//*[@id='form-content']/div/div[2]/div/div/div/div[3]/label/span/input")).sendKeys(confmap.testFile)
    //cargar archivo
    await driver.findElement(By.xpath("//*[@id='form-content']/div/div[2]/div/div/div/div[3]/label/span/input")).sendKeys(confmap.testFile)
    // 25 | click | css=.forms-main-btns > .ui:nth-child(1) | 
    await driver.findElement(By.css(".forms-main-btns > .ui:nth-child(1)")).click()
    // 26 | waitForElementPresent | xpath=//p[contains(.,'Resource created')] | 5000
    await driver.wait(until.elementLocated(By.xpath("//p[contains(.,\'Resource created\')]")), 5000)
    // 27 | verifyText | xpath=//p[contains(.,'Resource created')] | Resource created
    assert(await driver.findElement(By.xpath("//p[contains(.,\'Resource created\')]")).getText() == "Resource created")
    // 28 | click | css=.circular > .close | 
    await driver.findElement(By.css(".circular > .close")).click()
  })
  it('Create Activity 2', async function() {
    // Test name: Create Activity 2
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | waitForElementPresent | css=.teal > .ui:nth-child(1) | 30000
    await driver.wait(until.elementLocated(By.css(".teal > .ui:nth-child(1)")), 30000)
    // 15 | assertText | css=.teal > .ui:nth-child(1) | New activity
    assert(await driver.findElement(By.css(".teal > .ui:nth-child(1)")).getText() == "New activity")
    // 16 | click | css=.teal > .ui:nth-child(1) | 
    await driver.findElement(By.css(".teal > .ui:nth-child(1)")).click()
    // 17 | click | css=.ui > label | 
    await driver.findElement(By.css(".ui > label")).click()
    // 18 | type | id=root_description_name | test 2
    await driver.findElement(By.xpath("//label[contains(.,\'name *\')]/following-sibling::input")).sendKeys("test 2")
    // 19 | type | id=root_description_external_url | www.test2.com
    await driver.findElement(By.xpath("//label[contains(.,\'external_url\')]/following-sibling::input")).sendKeys("www.test2.com")
    // 20 | type | id=root_description_description | test description 2
    await driver.findElement(By.xpath("//label[contains(.,\'description\')]/following-sibling::textarea")).sendKeys("test description 2")
    // 21 | click | css=.grouped:nth-child(6) .plus | 
    await driver.findElement(By.css(".grouped:nth-child(6) .plus")).click()
    // 22 | type | id=root_description_tags_0 | test 2
    await driver.findElement(By.id("root_description_tags_0")).sendKeys("test 2")
    // 23 | click | css=.grouped:nth-child(7) .plus | 
    await driver.findElement(By.css(".grouped:nth-child(7) .plus")).click()
    // 24 | type | id=root_description_categories_0 | test 2
    await driver.findElement(By.id("root_description_categories_0")).sendKeys("test 2")
    // 25 | click | css=.forms-main-btns > .ui:nth-child(1) | 
    await driver.findElement(By.css(".forms-main-btns > .ui:nth-child(1)")).click()
    // 26 | waitForElementPresent | xpath=//p[contains(.,'Resource created')] | 5000
    await driver.wait(until.elementLocated(By.xpath("//p[contains(.,\'Resource created\')]")), 5000)
    // 27 | verifyText | xpath=//p[contains(.,'Resource created')] | Resource created
    assert(await driver.findElement(By.xpath("//p[contains(.,\'Resource created\')]")).getText() == "Resource created")
    // 28 | click | css=.circular > .close | 
    await driver.findElement(By.css(".circular > .close")).click()
  })
  it('Create Activity 3', async function() {
    // Test name: Create Activity 3
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | waitForElementPresent | css=.teal > .ui:nth-child(1) | 30000
    await driver.wait(until.elementLocated(By.css(".teal > .ui:nth-child(1)")), 30000)
    // 15 | assertText | css=.teal > .ui:nth-child(1) | New activity
    assert(await driver.findElement(By.css(".teal > .ui:nth-child(1)")).getText() == "New activity")
    // 16 | click | css=.teal > .ui:nth-child(1) | 
    await driver.findElement(By.css(".teal > .ui:nth-child(1)")).click()
    // 17 | click | css=.ui > label | 
    await driver.findElement(By.css(".ui > label")).click()
    // 18 | type | id=root_description_name | test 3
    await driver.findElement(By.xpath("//label[contains(.,\'name *\')]/following-sibling::input")).sendKeys("test 3")
    // 19 | type | id=root_description_external_url | www.test3.com
    await driver.findElement(By.xpath("//label[contains(.,\'external_url\')]/following-sibling::input")).sendKeys("www.test3.com")
    // 20 | type | id=root_description_description | test description 3
    await driver.findElement(By.xpath("//label[contains(.,\'description\')]/following-sibling::textarea")).sendKeys("test description 3")
    // 21 | click | css=.grouped:nth-child(6) .plus | 
    await driver.findElement(By.css(".grouped:nth-child(6) .plus")).click()
    // 22 | type | id=root_description_tags_0 | test 2
    await driver.findElement(By.id("root_description_tags_0")).sendKeys("test 2")
    // 23 | click | css=.grouped:nth-child(7) .plus | 
    await driver.findElement(By.css(".grouped:nth-child(7) .plus")).click()
    // 24 | type | id=root_description_categories_0 | test 1
    await driver.findElement(By.id("root_description_categories_0")).sendKeys("test 1")
    //subida de archivos
    //carga imagen previa
    await driver.findElement(By.xpath("//*[@id='form-content']/div/div[2]/div/div/div/div[3]/label/span/input")).sendKeys(confmap.testFile)
    //cargar archivo
    await driver.findElement(By.xpath("//*[@id='form-content']/div/div[2]/div/div/div/div[3]/label/span/input")).sendKeys(confmap.testFile)
    // 25 | click | css=.forms-main-btns > .ui:nth-child(1) | 
    await driver.findElement(By.css(".forms-main-btns > .ui:nth-child(1)")).click()
    // 26 | waitForElementPresent | xpath=//p[contains(.,'Resource created')] | 5000
    await driver.wait(until.elementLocated(By.xpath("//p[contains(.,\'Resource created\')]")), 5000)
    // 27 | verifyText | xpath=//p[contains(.,'Resource created')] | Resource created
    assert(await driver.findElement(By.xpath("//p[contains(.,\'Resource created\')]")).getText() == "Resource created")
    // 28 | click | css=.circular > .close | 
    await driver.findElement(By.css(".circular > .close")).click()
  })
  it('Edit Activity 1-1', async function() {
    // Test name: Edit Activity 1-1
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | click | css=input:nth-child(2) | 
    await driver.findElement(By.css("input:nth-child(2)")).click()
    // 15 | type | css=input:nth-child(2) | test 1
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 1")
    // 16 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 17 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 18 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 1500
    await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item")), 1500)
    // 19 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 
    {
      const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item"))
      assert(elements.length)
    }
    // 20 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
    // 21 | waitForElementPresent | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), NaN)
    // 22 | waitForElementVisible | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiTypography-h6"))), NaN)
    // 23 | assertText | css=.MuiTypography-h6 | Test 1
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 1")
    // 24 | waitForElementPresent | css=.close | 30000
    await driver.wait(until.elementLocated(By.css(".close")), 30000)
    // 25 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 26 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .edit | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .edit")).click()
    // 27 | pause | 400 | 400
    await driver.sleep(400)
    // 28 | waitForElementVisible | linkText=LOM-ES | 30000
    await driver.wait(until.elementIsVisible(await driver.findElement(By.linkText("LOM-ES"))), 30000)
    // 29 | click | linkText=LOM-ES | 
    await driver.findElement(By.linkText("LOM-ES")).click()
    // 30 | pause | 400 | 400
    await driver.sleep(400)
    // 31 | type | id=rjsf_prefix | test 1 edited
    await driver.findElement(By.id("rjsf_prefix")).sendKeys("test 1 edited")
    // 32 | type | xpath=(//input[@id='rjsf_prefix'])[2] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[2]")).sendKeys("test 1 edited")
    // 33 | type | xpath=(//input[@id='rjsf_prefix'])[3] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[3]")).sendKeys("test 1 edited")
    // 34 | type | xpath=(//input[@id='rjsf_prefix'])[4] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[4]")).sendKeys("test 1 edited")
    // 35 | click | css=.fluid > .icon | 
    await driver.findElement(By.css(".fluid > .icon")).click()
    // 36 | click | css=.visible > .selected > .text | 
    await driver.findElement(By.css(".visible > .selected > .text")).click()
    // 37 | type | xpath=(//input[@id='rjsf_prefix'])[5] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[5]")).sendKeys("test 1 edited")
    // 38 | type | xpath=(//input[@id='rjsf_prefix'])[6] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[6]")).sendKeys("test 1 edited")
    // 39 | type | xpath=(//input[@id='rjsf_prefix'])[7] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[7]")).sendKeys("test 1 edited")
    // 40 | type | xpath=(//input[@id='rjsf_prefix'])[8] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[8]")).sendKeys("test 1 edited")
    // 41 | type | xpath=(//input[@id='rjsf_prefix'])[9] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[9]")).sendKeys("test 1 edited")
    // 42 | click | xpath=//button[contains(.,'Submit')] | 
    await driver.findElement(By.xpath("//button[contains(.,\'Submit\')]")).click()
    // 43 | pause | 800 | 800
    await driver.sleep(800)
    // 44 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
  })
  it('Edit Activity 1-2', async function() {
    // Test name: Edit Activity 1-2
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | click | css=input:nth-child(2) | 
    await driver.findElement(By.css("input:nth-child(2)")).click()
    // 15 | type | css=input:nth-child(2) | test 1
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 1")
    // 16 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 17 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 18 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 1500
    await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item")), 1500)
    // 19 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 
    {
      const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item"))
      assert(elements.length)
    }
    // 20 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
    // 21 | waitForElementPresent | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), NaN)
    // 22 | waitForElementVisible | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiTypography-h6"))), NaN)
    // 23 | assertText | css=.MuiTypography-h6 | Test 1
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 1")
    // 24 | waitForElementPresent | css=.close | 30000
    await driver.wait(until.elementLocated(By.css(".close")), 30000)
    // 25 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 26 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .edit | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .edit")).click()
    // 27 | pause | 400 | 400
    await driver.sleep(400)
    // 28 | waitForElementVisible | linkText=LOM-ES | 30000
    await driver.wait(until.elementIsVisible(await driver.findElement(By.linkText("LOM-ES"))), 30000)
    // 29 | click | linkText=LOM-ES | 
    await driver.findElement(By.linkText("LOM-ES")).click()
    // 30 | click | id=vertical-tab-2 | 
    await driver.findElement(By.id("vertical-tab-2")).click()
    // 31 | pause | 400 | 400
    await driver.sleep(400)
    // 32 | type | id=rjsf_prefix | test 1 edited
    await driver.findElement(By.id("rjsf_prefix")).sendKeys("test 1 edited")
    // 33 | type | xpath=(//input[@id='rjsf_prefix'])[2] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[2]")).sendKeys("test 1 edited")
    // 34 | type | xpath=(//input[@id='rjsf_prefix'])[3] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[3]")).sendKeys("test 1 edited")
    // 35 | type | xpath=(//input[@id='rjsf_prefix'])[4] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[4]")).sendKeys("test 1 edited")
    // 36 | type | xpath=(//input[@id='rjsf_prefix'])[5] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[5]")).sendKeys("test 1 edited")
    // 37 | type | xpath=(//input[@id='rjsf_prefix'])[6] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[6]")).sendKeys("test 1 edited")
    // 38 | click | xpath=//button[contains(.,'Submit')] | 
    await driver.findElement(By.xpath("//button[contains(.,\'Submit\')]")).click()
    // 39 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
  })
  it('Edit Activity 1-3', async function() {
    // Test name: Edit Activity 1-3
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | click | css=input:nth-child(2) | 
    await driver.findElement(By.css("input:nth-child(2)")).click()
    // 15 | type | css=input:nth-child(2) | test 1
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 1")
    // 16 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 17 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 18 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 1500
    await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item")), 1500)
    // 19 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 
    {
      const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item"))
      assert(elements.length)
    }
    // 20 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
    // 21 | waitForElementPresent | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), NaN)
    // 22 | waitForElementVisible | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiTypography-h6"))), NaN)
    // 23 | assertText | css=.MuiTypography-h6 | Test 1
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 1")
    // 24 | waitForElementPresent | css=.close | 30000
    await driver.wait(until.elementLocated(By.css(".close")), 30000)
    // 25 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 26 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .edit | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .edit")).click()
    // 27 | pause | 400 | 400
    await driver.sleep(400)
    // 28 | waitForElementVisible | linkText=LOM-ES | 30000
    await driver.wait(until.elementIsVisible(await driver.findElement(By.linkText("LOM-ES"))), 30000)
    // 29 | click | linkText=LOM-ES | 
    await driver.findElement(By.linkText("LOM-ES")).click()
    // 30 | click | id=vertical-tab-3 | 
    await driver.findElement(By.id("vertical-tab-3")).click()
    // 31 | pause | 400 | 400
    await driver.sleep(400)
    // 32 | type | id=rjsf_prefix | test 1 edited
    await driver.findElement(By.id("rjsf_prefix")).sendKeys("test 1 edited")
    // 33 | type | xpath=(//input[@id='rjsf_prefix'])[2] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[2]")).sendKeys("test 1 edited")
    // 34 | type | xpath=(//input[@id='rjsf_prefix'])[3] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[3]")).sendKeys("test 1 edited")
    // 35 | type | xpath=(//input[@id='rjsf_prefix'])[4] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[4]")).sendKeys("test 1 edited")
    // 36 | type | xpath=(//input[@id='rjsf_prefix'])[5] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[5]")).sendKeys("test 1 edited")
    // 37 | type | xpath=(//input[@id='rjsf_prefix'])[6] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[6]")).sendKeys("test 1 edited")
    // 38 | type | xpath=(//input[@id='rjsf_prefix'])[7] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[7]")).sendKeys("test 1 edited")
    // 39 | type | xpath=(//input[@id='rjsf_prefix'])[8] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[8]")).sendKeys("test 1 edited")
    // 40 | click | css=.selection:nth-child(2) | 
    await driver.findElement(By.css(".selection:nth-child(2)")).click()
    // 41 | click | css=.visible > .selected | 
    await driver.findElement(By.css(".visible > .selected")).click()
    // 42 | click | xpath=//button[contains(.,'Submit')] | 
    await driver.findElement(By.xpath("//button[contains(.,\'Submit\')]")).click()
    // 43 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
  })
  it('Edit Activity 1-4', async function() {
    // Test name: Edit Activity 1-4
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | click | css=input:nth-child(2) | 
    await driver.findElement(By.css("input:nth-child(2)")).click()
    // 15 | type | css=input:nth-child(2) | test 1
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 1")
    // 16 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 17 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 18 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 1500
    await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item")), 1500)
    // 19 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 
    {
      const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item"))
      assert(elements.length)
    }
    // 20 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
    // 21 | waitForElementPresent | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), NaN)
    // 22 | waitForElementVisible | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiTypography-h6"))), NaN)
    // 23 | assertText | css=.MuiTypography-h6 | Test 1
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 1")
    // 24 | waitForElementPresent | css=.close | 30000
    await driver.wait(until.elementLocated(By.css(".close")), 30000)
    // 25 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 26 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .edit | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .edit")).click()
    // 27 | pause | 400 | 400
    await driver.sleep(400)
    // 28 | waitForElementVisible | linkText=LOM-ES | 30000
    await driver.wait(until.elementIsVisible(await driver.findElement(By.linkText("LOM-ES"))), 30000)
    // 29 | click | linkText=LOM-ES | 
    await driver.findElement(By.linkText("LOM-ES")).click()
    // 30 | click | id=vertical-tab-4 | 
    await driver.findElement(By.id("vertical-tab-4")).click()
    // 31 | pause | 400 | 400
    await driver.sleep(400)
    // 32 | type | id=rjsf_prefix | test 1 edited
    await driver.findElement(By.id("rjsf_prefix")).sendKeys("test 1 edited")
    // 33 | type | xpath=(//input[@id='rjsf_prefix'])[2] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[2]")).sendKeys("test 1 edited")
    // 34 | type | xpath=(//input[@id='rjsf_prefix'])[3] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[3]")).sendKeys("test 1 edited")
    // 35 | type | xpath=(//input[@id='rjsf_prefix'])[4] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[4]")).sendKeys("test 1 edited")
    // 36 | type | xpath=(//input[@id='rjsf_prefix'])[5] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[5]")).sendKeys("test 1 edited")
    // 37 | type | xpath=(//input[@id='rjsf_prefix'])[6] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[6]")).sendKeys("test 1 edited")
    // 38 | type | xpath=(//input[@id='rjsf_prefix'])[7] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[7]")).sendKeys("test 1 edited")
    // 39 | type | xpath=(//input[@id='rjsf_prefix'])[8] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[8]")).sendKeys("test 1 edited")
    // 40 | type | xpath=(//input[@id='rjsf_prefix'])[9] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[9]")).sendKeys("test 1 edited")
    // 41 | type | xpath=(//input[@id='rjsf_prefix'])[10] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[10]")).sendKeys("test 1 edited")
    // 42 | type | xpath=(//input[@id='rjsf_prefix'])[11] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[11]")).sendKeys("test 1 edited")
    // 43 | type | xpath=(//input[@id='rjsf_prefix'])[12] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[12]")).sendKeys("test 1 edited")
    // 44 | click | xpath=//button[contains(.,'Submit')] | 
    await driver.findElement(By.xpath("//button[contains(.,\'Submit\')]")).click()
    // 45 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
  })
  it('Edit Activity 1-5', async function() {
    // Test name: Edit Activity 1-5
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | click | css=input:nth-child(2) | 
    await driver.findElement(By.css("input:nth-child(2)")).click()
    // 15 | type | css=input:nth-child(2) | test 1
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 1")
    // 16 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 17 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 18 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 1500
    await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item")), 1500)
    // 19 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 
    {
      const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item"))
      assert(elements.length)
    }
    // 20 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
    // 21 | waitForElementPresent | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), NaN)
    // 22 | waitForElementVisible | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiTypography-h6"))), NaN)
    // 23 | assertText | css=.MuiTypography-h6 | Test 1
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 1")
    // 24 | waitForElementPresent | css=.close | 30000
    await driver.wait(until.elementLocated(By.css(".close")), 30000)
    // 25 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 26 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .edit | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .edit")).click()
    // 27 | pause | 800 | 800
    await driver.sleep(800)
    // 28 | waitForElementVisible | linkText=LOM-ES | 30000
    await driver.wait(until.elementIsVisible(await driver.findElement(By.linkText("LOM-ES"))), 30000)
    // 29 | click | linkText=LOM-ES | 
    await driver.findElement(By.linkText("LOM-ES")).click()
    // 30 | click | id=vertical-tab-5 | 
    await driver.findElement(By.id("vertical-tab-5")).click()
    // 31 | pause | 800 | 800
    await driver.sleep(800)
    // 32 | click | css=.grouped:nth-child(2) > .ui | 
    await driver.findElement(By.css(".grouped:nth-child(2) > .ui")).click()
    // 33 | click | css=.visible > .selected | 
    await driver.findElement(By.css(".visible > .selected")).click()
    // 34 | click | css=.grouped:nth-child(3) > .ui | 
    await driver.findElement(By.css(".grouped:nth-child(3) > .ui")).click()
    // 35 | click | css=.visible > .selected > .text | 
    await driver.findElement(By.css(".visible > .selected > .text")).click()
    // 36 | click | css=.grouped:nth-child(4) > .ui | 
    await driver.findElement(By.css(".grouped:nth-child(4) > .ui")).click()
    // 37 | click | css=.visible > .selected | 
    await driver.findElement(By.css(".visible > .selected")).click()
    // 38 | type | id=rjsf_prefix | test 1 edited
    await driver.findElement(By.id("rjsf_prefix")).sendKeys("test 1 edited")
    // 39 | click | css=.grouped:nth-child(6) > .ui | 
    await driver.findElement(By.css(".grouped:nth-child(6) > .ui")).click()
    // 40 | click | css=.visible > .selected > .text | 
    await driver.findElement(By.css(".visible > .selected > .text")).click()
    // 41 | click | css=.grouped:nth-child(7) > .ui | 
    await driver.findElement(By.css(".grouped:nth-child(7) > .ui")).click()
    // 42 | click | css=.visible > .selected > .text | 
    await driver.findElement(By.css(".visible > .selected > .text")).click()
    // 43 | type | xpath=(//input[@id='rjsf_prefix'])[2] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[2]")).sendKeys("test 1 edited")
    // 44 | click | css=.grouped:nth-child(9) > .ui | 
    await driver.findElement(By.css(".grouped:nth-child(9) > .ui")).click()
    // 45 | click | css=.visible > .selected | 
    await driver.findElement(By.css(".visible > .selected")).click()
    // 46 | type | xpath=(//input[@id='rjsf_prefix'])[3] | 5
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[3]")).sendKeys("5")
    // 47 | type | xpath=(//input[@id='rjsf_prefix'])[4] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[4]")).sendKeys("test 1 edited")
    // 48 | click | css=.grouped:nth-child(12) > .ui | 
    await driver.findElement(By.css(".grouped:nth-child(12) > .ui")).click()
    // 49 | click | css=.visible > .selected | 
    await driver.findElement(By.css(".visible > .selected")).click()
    // 50 | click | css=.grouped:nth-child(10) #rjsf_prefix | 
    await driver.findElement(By.css(".grouped:nth-child(10) #rjsf_prefix")).click()
    // 51 | click | css=.MuiBox-root | 
    await driver.findElement(By.css(".MuiBox-root")).click()
    // 52 | click | css=.MuiBox-root | 
    await driver.findElement(By.css(".MuiBox-root")).click()
    // 53 | click | css=.grouped:nth-child(13) > .ui | 
    await driver.findElement(By.css(".grouped:nth-child(13) > .ui")).click()
    // 54 | click | css=.visible > .selected | 
    await driver.findElement(By.css(".visible > .selected")).click()
    // 55 | click | xpath=//button[contains(.,'Submit')] | 
    await driver.findElement(By.xpath("//button[contains(.,\'Submit\')]")).click()
    // 56 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
  })
  it('Edit Activity 1-6', async function() {
    // Test name: Edit Activity 1-6
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | click | css=input:nth-child(2) | 
    await driver.findElement(By.css("input:nth-child(2)")).click()
    // 15 | type | css=input:nth-child(2) | test 1
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 1")
    // 16 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 17 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 18 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 1500
    await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item")), 1500)
    // 19 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 
    {
      const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item"))
      assert(elements.length)
    }
    // 20 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
    // 21 | waitForElementPresent | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), NaN)
    // 22 | waitForElementVisible | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiTypography-h6"))), NaN)
    // 23 | assertText | css=.MuiTypography-h6 | Test 1
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 1")
    // 24 | waitForElementPresent | css=.close | 30000
    await driver.wait(until.elementLocated(By.css(".close")), 30000)
    // 25 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 26 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .edit | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .edit")).click()
    // 27 | pause | 400 | 400
    await driver.sleep(400)
    // 28 | waitForElementVisible | linkText=LOM-ES | 30000
    await driver.wait(until.elementIsVisible(await driver.findElement(By.linkText("LOM-ES"))), 30000)
    // 29 | click | linkText=LOM-ES | 
    await driver.findElement(By.linkText("LOM-ES")).click()
    // 30 | click | id=vertical-tab-6 | 
    await driver.findElement(By.id("vertical-tab-6")).click()
    // 31 | pause | 400 | 400
    await driver.sleep(400)
    // 32 | click | css=.grouped:nth-child(2) > .ui | 
    await driver.findElement(By.css(".grouped:nth-child(2) > .ui")).click()
    // 33 | click | css=.visible > .selected | 
    await driver.findElement(By.css(".visible > .selected")).click()
    // 34 | click | css=.grouped:nth-child(3) > .ui | 
    await driver.findElement(By.css(".grouped:nth-child(3) > .ui")).click()
    // 35 | click | css=.visible > .selected > .text | 
    await driver.findElement(By.css(".visible > .selected > .text")).click()
    // 36 | type | id=rjsf_prefix | test 1 edited
    await driver.findElement(By.id("rjsf_prefix")).sendKeys("test 1 edited")
    // 37 | type | xpath=(//input[@id='rjsf_prefix'])[2] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[2]")).sendKeys("test 1 edited")
    // 38 | type | xpath=(//input[@id='rjsf_prefix'])[3] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[3]")).sendKeys("test 1 edited")
    // 39 | click | xpath=//button[contains(.,'Submit')] | 
    await driver.findElement(By.xpath("//button[contains(.,\'Submit\')]")).click()
    // 40 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
  })
  it('Edit Activity 1-7', async function() {
    // Test name: Edit Activity 1-7
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | click | css=input:nth-child(2) | 
    await driver.findElement(By.css("input:nth-child(2)")).click()
    // 15 | type | css=input:nth-child(2) | test 1
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 1")
    // 16 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 17 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 18 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 1500
    await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item")), 1500)
    // 19 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 
    {
      const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item"))
      assert(elements.length)
    }
    // 20 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
    // 21 | waitForElementPresent | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), NaN)
    // 22 | waitForElementVisible | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiTypography-h6"))), NaN)
    // 23 | assertText | css=.MuiTypography-h6 | Test 1
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 1")
    // 24 | waitForElementPresent | css=.close | 30000
    await driver.wait(until.elementLocated(By.css(".close")), 30000)
    // 25 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 26 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .edit | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .edit")).click()
    // 27 | pause | 800 | 800
    await driver.sleep(800)
    // 28 | waitForElementVisible | linkText=LOM-ES | 30000
    await driver.wait(until.elementIsVisible(await driver.findElement(By.linkText("LOM-ES"))), 30000)
    // 29 | click | linkText=LOM-ES | 
    await driver.findElement(By.linkText("LOM-ES")).click()
    // 30 | click | id=vertical-tab-7 | 
    await driver.findElement(By.id("vertical-tab-7")).click()
    // 31 | pause | 800 | 800
    await driver.sleep(800)
    // 32 | type | id=rjsf_prefix | test 1 edited
    await driver.findElement(By.id("rjsf_prefix")).sendKeys("test 1 edited")
    // 33 | type | xpath=(//input[@id='rjsf_prefix'])[2] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[2]")).sendKeys("test 1 edited")
    // 34 | type | xpath=(//input[@id='rjsf_prefix'])[3] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[3]")).sendKeys("test 1 edited")
    // 35 | type | xpath=(//input[@id='rjsf_prefix'])[4] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[4]")).sendKeys("test 1 edited")
    // 36 | type | xpath=(//input[@id='rjsf_prefix'])[5] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[5]")).sendKeys("test 1 edited")
    // 37 | type | xpath=(//input[@id='rjsf_prefix'])[6] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[6]")).sendKeys("test 1 edited")
    // 38 | click | xpath=//button[contains(.,'Submit')] | 
    await driver.findElement(By.xpath("//button[contains(.,\'Submit\')]")).click()
    // 39 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
  })
  it('Edit Activity 1-8', async function() {
    // Test name: Edit Activity 1-8
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | click | css=input:nth-child(2) | 
    await driver.findElement(By.css("input:nth-child(2)")).click()
    // 15 | type | css=input:nth-child(2) | test 1
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 1")
    // 16 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 17 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 18 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 1500
    await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item")), 1500)
    // 19 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 
    {
      const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item"))
      assert(elements.length)
    }
    // 20 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
    // 21 | waitForElementPresent | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), NaN)
    // 22 | waitForElementVisible | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiTypography-h6"))), NaN)
    // 23 | assertText | css=.MuiTypography-h6 | Test 1
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 1")
    // 24 | waitForElementPresent | css=.close | 30000
    await driver.wait(until.elementLocated(By.css(".close")), 30000)
    // 25 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 26 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .edit | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .edit")).click()
    // 27 | pause | 800 | 800
    await driver.sleep(800)
    // 28 | waitForElementVisible | linkText=LOM-ES | 30000
    await driver.wait(until.elementIsVisible(await driver.findElement(By.linkText("LOM-ES"))), 30000)
    // 29 | click | linkText=LOM-ES | 
    await driver.findElement(By.linkText("LOM-ES")).click()
    // 30 | click | id=vertical-tab-8 | 
    await driver.findElement(By.id("vertical-tab-8")).click()
    // 31 | pause | 800 | 800
    await driver.sleep(800)
    // 32 | type | id=rjsf_prefix | test 1 edited
    await driver.findElement(By.id("rjsf_prefix")).sendKeys("test 1 edited")
    // 33 | type | xpath=(//input[@id='rjsf_prefix'])[2] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[2]")).sendKeys("test 1 edited")
    // 34 | type | xpath=(//input[@id='rjsf_prefix'])[3] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[3]")).sendKeys("test 1 edited")
    // 35 | click | xpath=//button[contains(.,'Submit')] | 
    await driver.findElement(By.xpath("//button[contains(.,\'Submit\')]")).click()
    // 36 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
  })
  it('Edit Activity 1-9', async function() {
    // Test name: Edit Activity 1-9
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | click | css=input:nth-child(2) | 
    await driver.findElement(By.css("input:nth-child(2)")).click()
    // 15 | type | css=input:nth-child(2) | test 1
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 1")
    // 16 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 17 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 18 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 1500
    await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item")), 1500)
    // 19 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 
    {
      const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item"))
      assert(elements.length)
    }
    // 20 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
    // 21 | waitForElementPresent | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), NaN)
    // 22 | waitForElementVisible | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiTypography-h6"))), NaN)
    // 23 | assertText | css=.MuiTypography-h6 | Test 1
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 1")
    // 24 | waitForElementPresent | css=.close | 30000
    await driver.wait(until.elementLocated(By.css(".close")), 30000)
    // 25 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 26 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .edit | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .edit")).click()
    // 27 | pause | 800 | 800
    await driver.sleep(800)
    // 28 | waitForElementVisible | linkText=LOM-ES | 30000
    await driver.wait(until.elementIsVisible(await driver.findElement(By.linkText("LOM-ES"))), 30000)
    // 29 | click | linkText=LOM-ES | 
    await driver.findElement(By.linkText("LOM-ES")).click()
    // 30 | click | id=vertical-tab-9 | 
    await driver.findElement(By.id("vertical-tab-9")).click()
    // 31 | pause | 800 | 800
    await driver.sleep(800)
    // 32 | type | id=rjsf_prefix | test 1 edited
    await driver.findElement(By.id("rjsf_prefix")).sendKeys("test 1 edited")
    // 33 | type | xpath=(//input[@id='rjsf_prefix'])[2] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[2]")).sendKeys("test 1 edited")
    // 34 | type | xpath=(//input[@id='rjsf_prefix'])[3] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[3]")).sendKeys("test 1 edited")
    // 35 | type | xpath=(//input[@id='rjsf_prefix'])[4] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[4]")).sendKeys("test 1 edited")
    // 36 | type | xpath=(//input[@id='rjsf_prefix'])[5] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[5]")).sendKeys("test 1 edited")
    // 37 | type | xpath=(//input[@id='rjsf_prefix'])[6] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[6]")).sendKeys("test 1 edited")
    // 38 | type | xpath=(//input[@id='rjsf_prefix'])[7] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[7]")).sendKeys("test 1 edited")
    // 39 | type | xpath=(//input[@id='rjsf_prefix'])[8] | test 1 edited
    await driver.findElement(By.xpath("(//input[@id=\'rjsf_prefix\'])[8]")).sendKeys("test 1 edited")
    // 40 | click | xpath=//button[contains(.,'Submit')] | 
    await driver.findElement(By.xpath("//button[contains(.,\'Submit\')]")).click()
    // 41 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
  })
  it('Edit Activity 1-10', async function() {
    // Test name: Edit Activity 1-10
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | click | css=input:nth-child(2) | 
    await driver.findElement(By.css("input:nth-child(2)")).click()
    // 15 | type | css=input:nth-child(2) | test 1
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 1")
    // 16 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 17 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 18 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 1500
    await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item")), 1500)
    // 19 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 
    {
      const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item"))
      assert(elements.length)
    }
    // 20 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
    // 21 | waitForElementPresent | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), NaN)
    // 22 | waitForElementVisible | css=.MuiTypography-h6 | Test 1
    await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiTypography-h6"))), NaN)
    // 23 | assertText | css=.MuiTypography-h6 | Test 1
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 1")
    // 24 | waitForElementPresent | css=.close | 30000
    await driver.wait(until.elementLocated(By.css(".close")), 30000)
    // 25 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 26 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .edit | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .edit")).click()
    // 27 | pause | 800 | 800
    await driver.sleep(800)
    // 28 | click | css=.ui > label | 
    await driver.findElement(By.css(".ui > label")).click()
    // 29 | type | id=root_description_name | test 1 edited
    await driver.findElement(By.xpath("//label[contains(.,\'name *\')]/following-sibling::input")).sendKeys("test 1 edited")
    // 30 | type | id=root_description_description | test description, test 1 edited
    await driver.findElement(By.xpath("//label[contains(.,\'description\')]/following-sibling::textarea")).sendKeys("test description, test 1 edited")
    // 31 | click | css=.grouped:nth-child(6) > .MuiPaper-root > .ui | 
    await driver.findElement(By.css(".grouped:nth-child(6) > .MuiPaper-root > .ui")).click()
    // 32 | type | id=root_description_tags_1 | edited
    await driver.findElement(By.id("root_description_tags_1")).sendKeys("edited")
    // 33 | click | css=.grouped:nth-child(7) .plus | 
    await driver.findElement(By.css(".grouped:nth-child(7) .plus")).click()
    // 34 | type | id=root_description_categories_1 | edited
    await driver.findElement(By.id("root_description_categories_1")).sendKeys("edited")
    // 35 | click | css=.forms-main-btns > .ui:nth-child(1) | 
    await driver.findElement(By.css(".forms-main-btns > .ui:nth-child(1)")).click()
    // 36 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 37 | waitForElementVisible | xpath=//p[contains(.,'Resource updated')] | Resource updated
    await driver.wait(until.elementIsVisible(await driver.findElement(By.xpath("//p[contains(.,\'Resource updated\')]"))), NaN)
    // 38 | verifyText | xpath=//p[contains(.,'Resource updated')] | Resource updated
    assert(await driver.findElement(By.xpath("//p[contains(.,\'Resource updated\')]")).getText() == "Resource updated")
    // 39 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
  })
  it('Facets test - visible to Hide to visible', async function() {
    // Test name: Facets test - visible to Hide to visible
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | pause | 2500 | 2500
    await driver.sleep(2500)
    // 9 | assertElementPresent | css=.sideBar | 
    {
      const elements = await driver.findElements(By.css(".sideBar"))
      assert(elements.length)
    }
    // 10 | click | css=.angle | 
    await driver.findElement(By.css(".angle")).click()
    // 11 | pause | 2500 | 2500
    await driver.sleep(2500)
    // 12 | assertElementNotPresent | css=.sideBar | 
    {
      const elements = await driver.findElements(By.css(".sideBar"))
      assert(!elements.length)
    }
    // 13 | click | css=.xdam-btn-secondary | 
    await driver.findElement(By.css(".xdam-btn-secondary")).click()
    // 14 | pause | 2500 | 2500
    await driver.sleep(2500)
    // 15 | click | //*[@id="root"]/div/div[2]/div[1]/div[2]/div/div[1]/div[2] | 
    await driver.findElement(By.xpath("//*[@id=\"root\"]/div/div[2]/div[1]/div[2]/div/div[1]/div[2]")).click()
    // 16 | pause | 400 | 400
    await driver.sleep(400)
    // 17 | click | css=.MuiGrid-root:nth-child(1) > .MuiGrid-root > .MuiGrid-root > .MuiButtonBase-root .minus | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .MuiGrid-root > .MuiGrid-root > .MuiButtonBase-root .minus")).click()
    // 18 | click | css=.plus | 
    await driver.findElement(By.css(".plus")).click()
    // 19 | click | css=.MuiGrid-root:nth-child(2) > .makeStyles-cardFacet-37 | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(2) > .makeStyles-cardFacet-37")).click()
    // 20 | click | css=.MuiGrid-root:nth-child(2) > .MuiGrid-root > .MuiGrid-root > .MuiButtonBase-root .minus | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(2) > .MuiGrid-root > .MuiGrid-root > .MuiButtonBase-root .minus")).click()
    // 21 | click | css=.plus | 
    await driver.findElement(By.css(".plus")).click()
    // 22 | click | css=.MuiGrid-root:nth-child(3) > .makeStyles-cardFacet-37 | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(3) > .makeStyles-cardFacet-37")).click()
    // 23 | click | css=.MuiGrid-root:nth-child(3) .minus | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(3) .minus")).click()
    // 24 | click | css=.plus | 
    await driver.findElement(By.css(".plus")).click()
  })
  it('Facets test - select filter', async function() {
    // Test name: Facets test - select filter
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | waitForElementPresent | css=input:nth-child(2) | 5000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 5000)
    // 11 | pause | 200 | 200
    await driver.sleep(200)
    // 12 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 13 | assertText | xpath=//span[contains(.,'test_2 (1)')] | test_2 (1)
    assert(await driver.findElement(By.xpath("//span[contains(.,\'test_2 (1)\')]")).getText() == "test_2 (1)")
    // 14 | click | xpath=//span[contains(.,'test_2 (1)')] | 
    await driver.findElement(By.xpath("//span[contains(.,\'test_2 (1)\')]")).click()
    // 15 | pause | 500 | 500
    await driver.sleep(500)
    // 16 | click | css=.MuiGrid-root:nth-child(1) > .dam-item > .dam-type | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item > .dam-type")).click()
    // 17 | pause | 500 | 500
    await driver.sleep(500)
    // 18 | assertText | css=.MuiTypography-h6 | Test 2
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 2")
    // 19 | assertText | css=.resource-metadata:nth-child(7) > p | Categories: Test_2
    assert(await driver.findElement(By.css(".resource-metadata:nth-child(7) > p")).getText() == "Categories: Test_2")
    // 20 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 21 | click | css=.MuiButton-outlined > .MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-outlined > .MuiButton-label")).click()
    // 22 | pause | 200 | 200
    await driver.sleep(200)
    // 23 | click | css=.MuiGrid-root:nth-child(2) > .dam-item .sc-dlnjwi | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(2) > .dam-item .sc-dlnjwi")).click()
    // 24 | pause | 500 | 500
    await driver.sleep(500)
    // 25 | assertText | css=.MuiTypography-h6 | Test 3
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 3")
    // 26 | assertText | css=.resource-metadata:nth-child(7) > p | Categories: Test_1
    assert(await driver.findElement(By.css(".resource-metadata:nth-child(7) > p")).getText() == "Categories: Test_1")
    // 27 | click | css=.circular | 
    await driver.findElement(By.css(".circular")).click()
    // 28 | pause | 200 | 200
    await driver.sleep(200)
    // 29 | click | css=.MuiGrid-root:nth-child(3) .sc-dlnjwi | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(3) .sc-dlnjwi")).click()
    // 30 | pause | 500 | 500
    await driver.sleep(500)
    // 31 | assertText | css=.MuiTypography-h6 | Test 1 Edited
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 1 Edited")
    // 32 | assertText | css=.resource-metadata:nth-child(7) > p | Categories: Test_1, Test_1, Edited
    assert(await driver.findElement(By.css(".resource-metadata:nth-child(7) > p")).getText() == "Categories: Test_1, Test_1, Edited")
    // 33 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 34 | assertText | xpath=//span[contains(.,'test_2 (1)')] | test_2 (1)
    assert(await driver.findElement(By.xpath("//span[contains(.,\'test_2 (1)\')]")).getText() == "test_2 (1)")
    // 35 | click | xpath=//span[contains(.,'test_2 (1)')] | 
    await driver.findElement(By.xpath("//span[contains(.,\'test_2 (1)\')]")).click()
    // 36 | pause | 200 | 200
    await driver.sleep(200)
    // 37 | assertText | css=.MuiGrid-grid-sm-12 > .ui | test_2
    assert(await driver.findElement(By.css(".MuiGrid-grid-sm-12 > .ui")).getText() == "test_2")
    // 38 | click | css=.sc-dlnjwi | 
    await driver.findElement(By.css(".sc-dlnjwi")).click()
    // 39 | pause | 200 | 200
    await driver.sleep(200)
    // 40 | assertText | css=.MuiTypography-h6 | Test 2
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 2")
    // 41 | assertText | css=.resource-metadata:nth-child(7) > p | Categories: Test_2
    assert(await driver.findElement(By.css(".resource-metadata:nth-child(7) > p")).getText() == "Categories: Test_2")
    // 42 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 43 | pause | 500 | 500
    await driver.sleep(500)
    // 44 | assertText | xpath=//span[contains(.,'true (1)')] | true (1)
    assert(await driver.findElement(By.xpath("//span[contains(.,\'true (1)\')]")).getText() == "true (1)")
    // 45 | click | xpath=//span[contains(.,'true (1)')] | 
    await driver.findElement(By.xpath("//span[contains(.,\'true (1)\')]")).click()
    // 46 | pause | 200 | 200
    await driver.sleep(200)
    // 47 | assertText | css=.label:nth-child(2) | active: true
    assert(await driver.findElement(By.css(".label:nth-child(2)")).getText() == "active: true")
    // 48 | click | css=.sc-dlnjwi | 
    await driver.findElement(By.css(".sc-dlnjwi")).click()
    // 49 | pause | 200 | 200
    await driver.sleep(200)
    // 50 | assertText | css=.MuiTypography-h6 | Test 2
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 2")
    // 51 | assertText | css=.resource-metadata:nth-child(7) > p | Categories: Test_2
    assert(await driver.findElement(By.css(".resource-metadata:nth-child(7) > p")).getText() == "Categories: Test_2")
    // 52 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 53 | pause | 200 | 200
    await driver.sleep(200)
    // 54 | assertText | xpath=//span[contains(.,'false (0)')] | false (0)
    assert(await driver.findElement(By.xpath("//span[contains(.,\'false (0)\')]")).getText() == "false (0)")
    // 55 | click | xpath=//span[contains(.,'false (0)')] | 
    await driver.findElement(By.xpath("//span[contains(.,\'false (0)\')]")).click()
    // 56 | pause | 200 | 200
    await driver.sleep(200)
    // 57 | assertText | css=.label:nth-child(3) | active: false
    assert(await driver.findElement(By.css(".label:nth-child(3)")).getText() == "active: false")
    // 58 | click | css=.sc-dlnjwi | 
    await driver.findElement(By.css(".sc-dlnjwi")).click()
    // 59 | pause | 400 | 400
    await driver.sleep(400)
    // 60 | assertText | css=.MuiTypography-h6 | Test 2
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 2")
    // 61 | assertText | css=.resource-metadata:nth-child(7) > p | Categories: Test_2
    assert(await driver.findElement(By.css(".resource-metadata:nth-child(7) > p")).getText() == "Categories: Test_2")
    // 62 | click | css=.circular | 
    await driver.findElement(By.css(".circular")).click()
    // 63 | pause | 200 | 200
    await driver.sleep(200)
    // 64 | assertText | xpath=//span[contains(.,'test_1 (0)')] | test_1 (0)
    assert(await driver.findElement(By.xpath("//span[contains(.,\'test_1 (0)\')]")).getText() == "test_1 (0)")
    // 65 | click | xpath=//span[contains(.,'test_1 (0)')] | 
    await driver.findElement(By.xpath("//span[contains(.,\'test_1 (0)\')]")).click()
    // 66 | pause | 400 | 400
    await driver.sleep(400)
    // 67 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
    // 68 | pause | 200 | 200
    await driver.sleep(200)
    // 69 | assertText | css=.MuiTypography-h6 | Test 2
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 2")
    // 70 | assertText | css=.resource-metadata:nth-child(7) > p | Categories: Test_2
    assert(await driver.findElement(By.css(".resource-metadata:nth-child(7) > p")).getText() == "Categories: Test_2")
    // 71 | click | css=.circular | 
    await driver.findElement(By.css(".circular")).click()
    // 72 | pause | 200 | 200
    await driver.sleep(200)
    // 73 | click | css=.MuiGrid-root:nth-child(2) > .dam-item .sc-dlnjwi | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(2) > .dam-item .sc-dlnjwi")).click()
    // 74 | pause | 200 | 200
    await driver.sleep(200)
    // 75 | assertText | css=.MuiTypography-h6 | Test 3
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 3")
    // 76 | assertText | css=.resource-metadata:nth-child(7) > p | Categories: Test_1
    assert(await driver.findElement(By.css(".resource-metadata:nth-child(7) > p")).getText() == "Categories: Test_1")
    // 77 | click | css=.circular | 
    await driver.findElement(By.css(".circular")).click()
    // 78 | pause | 200 | 200
    await driver.sleep(200)
    // 79 | click | css=.MuiGrid-root:nth-child(3) .dam-type | 
    await driver.findElement(By.css(".MuiGrid-root:nth-child(3) .dam-type")).click()
    // 80 | pause | 200 | 200
    await driver.sleep(200)
    // 81 | assertText | css=.MuiTypography-h6 | Test 1 Edited
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == "Test 1 Edited")
    // 82 | assertText | css=.resource-metadata:nth-child(7) > p | Categories: Test_1, Test_1, Edited
    assert(await driver.findElement(By.css(".resource-metadata:nth-child(7) > p")).getText() == "Categories: Test_1, Test_1, Edited")
    // 83 | click | css=.close | 
    await driver.findElement(By.css(".close")).click()
    // 84 | click | css=.MuiButton-outlined > .MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-outlined > .MuiButton-label")).click()
  })
  it('Search bar', async function() {
    // Test name: Search bar
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=input:nth-child(2) | 
    await driver.findElement(By.css("input:nth-child(2)")).click()
    // 12 | type | css=input:nth-child(2) | test 2
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 2")
    // 13 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 14 | pause | 500 | 500
    await driver.sleep(500)
    // 15 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 
    {
      const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item"))
      assert(elements.length)
    }
    // 16 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
    await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
    // 17 | pause | 500 | 500
    await driver.sleep(500)
    // 18 | assertText | css=.MuiTypography-h6 |  Test 2
    assert(await driver.findElement(By.css(".MuiTypography-h6")).getText() == " Test 2")
  })
  it('Search bar random', async function() {
    // Test name: Search bar random
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=input:nth-child(2) | 
    await driver.findElement(By.css("input:nth-child(2)")).click()
    // 12 | type | css=input:nth-child(2) | 4g'ty6""·ghj,:*ç´`
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("4g\'ty6\"\"·ghj,:*ç´\`")
    // 13 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 14 | pause | 500 | 500
    await driver.sleep(500)
    // 15 | assertElementNotPresent | css=.MuiGrid-root:nth-child(1) > .dam-item | 
    {
      const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item"))
      assert(!elements.length)
    }
  })
  it('Delete Activity', async function() {
    // Test name: Delete Activity
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.label > .divider | 
    await driver.findElement(By.css(".label > .divider")).click()
    // 12 | assertText | css=.visible > .item:nth-child(1) > .text | Public Organization Activity collection
    assert(await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).getText() == "Public Organization Activity collection")
    // 13 | click | css=.visible > .item:nth-child(1) > .text | 
    await driver.findElement(By.css(".visible > .item:nth-child(1) > .text")).click()
    // 14 | waitForElementPresent | css=input:nth-child(2) | 5000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 5000)
    // 15 | type | css=input:nth-child(2) | test 1
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 1")
    // 16 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 17 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 18 | storeXpathCount | xpath=//div[@id='main-r-c']/div[2]/div/div/div[5]/div/div/div[2]/div/div/div/img | exist
    await driver.findElements(By.xpath("//div[@id=\'main-r-c\']/div[2]/div/div/div[5]/div/div/div[2]/div/div/div/img")).then(elements => console.log(vars["exist"] = elements.length))
    // 19 | if | ${exist} > 0 | 
    if (!!await driver.executeScript("return (arguments[0] > 0)", vars["exist"])) {
      // 20 | pause | 1500 | 1500
      await driver.sleep(1500)
      // 21 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 5000
      await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")), 5000)
      // 22 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 
      {
        const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi"))
        assert(elements.length)
      }
      // 23 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
      await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
      // 24 | waitForElementPresent | css=.MuiTypography-h6 | 2500
      await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), 2500)
      // 25 | storeText | css=.MuiTypography-h6 | name1
      vars["name1"] = await driver.findElement(By.css(".MuiTypography-h6")).getText()
      // 26 | waitForElementPresent | css=.close | 30000
      await driver.wait(until.elementLocated(By.css(".close")), 30000)
      // 27 | click | css=.close | 
      await driver.findElement(By.css(".close")).click()
      // 28 | if | ${name1} == 'Test 1' | 
      if (!!await driver.executeScript("return (arguments[0] == \'Test 1\')", vars["name1"])) {
        // 30 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .trash | 5000
        await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item .trash")), 5000)
        // 31 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .trash | 
        await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .trash")).click()
        // 32 | assertConfirmation | sure? | 
        assert(await driver.switchTo().alert().getText() == "sure?")
        // 33 | webdriverChooseOkOnVisibleConfirmation |  | 
        await driver.switchTo().alert().accept()
        // 34 | else |  | 
      } else {
        // 35 | waitForElementPresent | css=input:nth-child(2) | 5000
        await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 5000)
        // 36 | sendKeys | css=input:nth-child(2) | ${KEY_DELETE}
        await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.DELETE)
        // 37 | type | css=input:nth-child(2) | Test 1 Edited
        await driver.findElement(By.css("input:nth-child(2)")).sendKeys("Test 1 Edited")
        // 38 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
        await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
        // 39 | pause | 1500 | 1500
        await driver.sleep(1500)
        // 40 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 5000
        await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")), 5000)
        // 41 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 
        {
          const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi"))
          assert(elements.length)
        }
        // 42 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi |  
        await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
        // 43 | waitForElementPresent | css=.MuiTypography-h6 | 2500
        await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), 2500)
        // 44 | storeText | css=.MuiTypography-h6 | name1b
        vars["name1b"] = await driver.findElement(By.css(".MuiTypography-h6")).getText()
        // 45 | waitForElementPresent | css=.close | 30000
        await driver.wait(until.elementLocated(By.css(".close")), 30000)
        // 46 | click | css=.close | 
        await driver.findElement(By.css(".close")).click()
        // 47 | if | ${name1b} == 'Test 1 Edited' | 
        if (!!await driver.executeScript("return (arguments[0] == \'Test 1 Edited\')", vars["name1b"])) {
          // 49 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .trash | 5000
          await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item .trash")), 5000)
          // 50 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .trash | 
          await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .trash")).click()
          // 51 | assertConfirmation | sure? | 
          assert(await driver.switchTo().alert().getText() == "sure?")
          // 52 | webdriverChooseOkOnVisibleConfirmation |  | 
          await driver.switchTo().alert().accept()
          // 53 | end |  | 
        }
        // 54 | end |  | 
      }
      // 55 | end |  | 
    }
    // 56 | waitForElementEditable | css=input:nth-child(2) | 30000
    await driver.wait(until.elementIsEnabled(await driver.findElement(By.css("input:nth-child(2)"))), 30000)
    // 57 | sendKeys | css=input:nth-child(2) | ${KEY_DELETE}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.DELETE)
    // 58 | type | css=input:nth-child(2) | test 3
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 3")
    // 59 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 60 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 61 | storeXpathCount | xpath=//div[@id='main-r-c']/div[2]/div/div/div[5]/div/div/div[2]/div/div/div/img | exist3
    await driver.findElements(By.xpath("//div[@id=\'main-r-c\']/div[2]/div/div/div[5]/div/div/div[2]/div/div/div/img")).then(elements => console.log(vars["exist3"] = elements.length))
    // 62 | if | ${exist3} > 0 | 
    if (!!await driver.executeScript("return (arguments[0] > 0)", vars["exist3"])) {
      // 63 | pause | 1500 | 1500
      await driver.sleep(1500)
      // 64 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 5000
      await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")), 5000)
      // 65 | waitForElementVisible | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 5000
      await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi"))), 5000)
      // 66 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 
      {
        const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi"))
        assert(elements.length)
      }
      // 67 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 
      await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
      // 68 | waitForElementPresent | css=.MuiTypography-h6 | 2500
      await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), 2500)
      // 69 | storeText | css=.MuiTypography-h6 | name3
      vars["name3"] = await driver.findElement(By.css(".MuiTypography-h6")).getText()
      // 70 | waitForElementPresent | css=.close | 30000
      await driver.wait(until.elementLocated(By.css(".close")), 30000)
      // 71 | click | css=.close | 
      await driver.findElement(By.css(".close")).click()
      // 72 | if | ${name3} == 'Test 3' | 
      if (!!await driver.executeScript("return (arguments[0] == \'Test 3\')", vars["name3"])) {
        // 74 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .trash | 30000
        await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item .trash")), 30000)
        // 75 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .trash | 
        await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .trash")).click()
        // 76 | assertConfirmation | sure? | 
        assert(await driver.switchTo().alert().getText() == "sure?")
        // 77 | webdriverChooseOkOnVisibleConfirmation |  | 
        await driver.switchTo().alert().accept()
        // 78 | end |  | 
      }
      // 79 | end |  | 
    }
    // 80 | waitForElementPresent | css=input:nth-child(2) | 5000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 5000)
    // 81 | sendKeys | css=input:nth-child(2) | ${KEY_DELETE}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.DELETE)
    // 82 | type | css=input:nth-child(2) | test 2
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys("test 2")
    // 83 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
    await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
    // 84 | pause | 1500 | 1500
    await driver.sleep(1500)
    // 85 | storeXpathCount | xpath=//div[@id='main-r-c']/div[2]/div/div/div[5]/div/div/div[2]/div/div/div/img | exist2
    await driver.findElements(By.xpath("//div[@id=\'main-r-c\']/div[2]/div/div/div[5]/div/div/div[2]/div/div/div/img")).then(elements => console.log(vars["exist2"] = elements.length))
    // 86 | if | ${exist2} > 0 | 
    if (!!await driver.executeScript("return (arguments[0] > 0)", vars["exist2"])) {
      // 87 | pause | 1500 | 1500
      await driver.sleep(1500)
      // 88 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 5000
      await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")), 5000)
      // 89 | waitForElementVisible | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 5000
      await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi"))), 5000)
      // 90 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 
      await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
      // 91 | waitForElementPresent | css=.MuiTypography-h6 | 2500
      await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), 2500)
      // 92 | storeText | css=.MuiTypography-h6 | name2
      vars["name2"] = await driver.findElement(By.css(".MuiTypography-h6")).getText()
      // 93 | waitForElementPresent | css=.close | 30000
      await driver.wait(until.elementLocated(By.css(".close")), 30000)
      // 94 | click | css=.close | 
      await driver.findElement(By.css(".close")).click()
      // 95 | if | ${name2} = 'Test 2' | 
      if (!!await driver.executeScript("return (arguments[0] = \'Test 2\')", vars["name2"])) {
        // 97 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .trash | 5000
        await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item .trash")), 5000)
        // 98 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .trash | 
        await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .trash")).click()
        // 99 | assertConfirmation | sure? | 
        assert(await driver.switchTo().alert().getText() == "sure?")
        // 100 | webdriverChooseOkOnVisibleConfirmation |  | 
        await driver.switchTo().alert().accept()
        // 101 | pause | 1500 | 1500
        await driver.sleep(1500)
        // 102 | end |  | 
      }
      // 103 | else |  | 
    } else {
      // 104 | waitForElementPresent | css=input:nth-child(2) | 5000
      await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 5000)
      // 105 | sendKeys | css=input:nth-child(2) | ${KEY_DELETE}
      await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.DELETE)
      // 106 | type | css=input:nth-child(2) | Agbe5uq354uw4569o79¡'`9`¡07'P+Ç´T89o0´R79´`N57i3567un262n6`'Nu6'Mnu
      await driver.findElement(By.css("input:nth-child(2)")).sendKeys("Agbe5uq354uw4569o79¡\'\`9\`¡07\'P+Ç´T89o0´R79´\`N57i3567un262n6\`\'Nu6\'Mnu")
      // 107 | sendKeys | css=input:nth-child(2) | ${KEY_ENTER}
      await driver.findElement(By.css("input:nth-child(2)")).sendKeys(Key.ENTER)
      // 108 | pause | 1000 | 1000
      await driver.sleep(1000)
      // 109 | storeXpathCount | xpath=//div[@id='main-r-c']/div[2]/div/div/div[5]/div/div/div[2]/div/div/div/img | existrare
      await driver.findElements(By.xpath("//div[@id=\'main-r-c\']/div[2]/div/div/div[5]/div/div/div[2]/div/div/div/img")).then(elements => console.log(vars["existrare"] = elements.length))
      // 110 | if | ${existrare} > 0 | 
      if (!!await driver.executeScript("return (arguments[0] > 0)", vars["existrare"])) {
        // 111 | pause | 1500 | 1500
        await driver.sleep(1500)
        // 112 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 5000
        await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")), 5000)
        // 113 | waitForElementVisible | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 5000
        await driver.wait(until.elementIsVisible(await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi"))), 5000)
        // 114 | assertElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 
        {
          const elements = await driver.findElements(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi"))
          assert(elements.length)
        }
        // 115 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi | 
        await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .sc-dlnjwi")).click()
        // 116 | waitForElementPresent | css=.MuiTypography-h6 | 2500
        await driver.wait(until.elementLocated(By.css(".MuiTypography-h6")), 2500)
        // 117 | storeText | css=.MuiTypography-h6 | name2b
        vars["name2b"] = await driver.findElement(By.css(".MuiTypography-h6")).getText()
        // 118 | waitForElementPresent | css=.close | 30000
        await driver.wait(until.elementLocated(By.css(".close")), 30000)
        // 119 | click | css=.close | 
        await driver.findElement(By.css(".close")).click()
        // 120 | if | ${name2b} == 'Agbe5uq354uw4569o79¡'`9`¡07'p+ç´t89o0´r79´`n57i3567un262n6`'nu6'mnu' | 
        if (!!await driver.executeScript("return (arguments[0] == \'Agbe5uq354uw4569o79¡\'\`9\`¡07\'p+ç´t89o0´r79´\`n57i3567un262n6\`\'nu6\'mnu\')", vars["name2b"])) {
          // 122 | waitForElementPresent | css=.MuiGrid-root:nth-child(1) > .dam-item .trash | 5000
          await driver.wait(until.elementLocated(By.css(".MuiGrid-root:nth-child(1) > .dam-item .trash")), 5000)
          // 123 | click | css=.MuiGrid-root:nth-child(1) > .dam-item .trash | 
          await driver.findElement(By.css(".MuiGrid-root:nth-child(1) > .dam-item .trash")).click()
          // 124 | assertConfirmation | sure? | 
          assert(await driver.switchTo().alert().getText() == "sure?")
          // 125 | webdriverChooseOkOnVisibleConfirmation |  | 
          await driver.switchTo().alert().accept()
          // 126 | pause | 1500 | 1500
          await driver.sleep(1500)
          // 127 | end |  | 
        }
        // 128 | end |  | 
      }
      // 129 | end |  | 
    }
  })
})
