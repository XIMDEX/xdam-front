// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const confmap = require('./TestConfig.js')

describe('Login', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Login wrong email', async function() {
    // Test name: Login wrong email
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/ | 
    await driver.get("http://192.168.0.30:3000/")
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.superadmin
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.superadmin")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 1231239
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("1231239")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | waitForElementPresent | xpath=//li[contains(.,'Invalid credentials')] | 30000
    await driver.wait(until.elementLocated(By.xpath("//li[contains(.,\'Invalid credentials\')]")), 30000)
    // 9 | assertElementPresent | xpath=//li[contains(.,'Invalid credentials')] | 
    {
      const elements = await driver.findElements(By.xpath("//li[contains(.,\'Invalid credentials\')]"))
      assert(elements.length)
    }
  })
  it('Login wrong pass', async function() {
    // Test name: Login wrong pass
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/ | 
    await driver.get("http://192.168.0.30:3000/")
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123345y
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123345y")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | waitForElementPresent | css=li | 30000
    await driver.wait(until.elementLocated(By.css("li")), 30000)
    // 9 | assertElementPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(elements.length)
    }
  })
  it('Login', async function() {
    // Test name: Login
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/ | 
    await driver.get("http://192.168.0.30:3000/")
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
  })
  it('Loguot', async function() {
    // Test name: Loguot
    // Step # | name | target | value
    // 1 | open | http://192.168.0.30:3000/home | 
    await driver.get(confmap.url)
    // 2 | setWindowSize | 1920x1080 | 
    await driver.manage().window().setRect({ width: 1920, height: 1080 })
    // 3 | click | xpath=//input | 
    await driver.findElement(By.xpath("//input")).click()
    // 4 | type | css=.Mui-focused > .MuiInputBase-input | superadmin@xdam.com
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("superadmin@xdam.com")
    // 5 | click | xpath=//div[2]/div/input | 
    await driver.findElement(By.xpath("//div[2]/div/input")).click()
    // 6 | type | css=.Mui-focused > .MuiInputBase-input | 123123
    await driver.findElement(By.css(".Mui-focused > .MuiInputBase-input")).sendKeys("123123")
    // 7 | click | css=.MuiButton-label | 
    await driver.findElement(By.css(".MuiButton-label")).click()
    // 8 | assertElementNotPresent | css=li | 
    {
      const elements = await driver.findElements(By.css("li"))
      assert(!elements.length)
    }
    // 9 | waitForElementPresent | css=input:nth-child(2) | 30000
    await driver.wait(until.elementLocated(By.css("input:nth-child(2)")), 30000)
    // 10 | assertElementPresent | css=input:nth-child(2) | 
    {
      const elements = await driver.findElements(By.css("input:nth-child(2)"))
      assert(elements.length)
    }
    // 11 | click | css=.ui:nth-child(2) > .divider | 
    await driver.findElement(By.css(".ui:nth-child(2) > .divider")).click()
    // 12 | click | css=.visible > .item | 
    await driver.findElement(By.css(".visible > .item")).click()
    // 13 | assertElementPresent | css=img | 
    {
      const elements = await driver.findElements(By.css("img"))
      assert(elements.length)
    }
  })
})
